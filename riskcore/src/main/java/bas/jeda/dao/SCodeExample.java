package bas.jeda.dao;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class SCodeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table S_CODE
     *
     * @mbggenerated Wed Mar 18 14:25:10 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table S_CODE
     *
     * @mbggenerated Wed Mar 18 14:25:10 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table S_CODE
     *
     * @mbggenerated Wed Mar 18 14:25:10 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_CODE
     *
     * @mbggenerated Wed Mar 18 14:25:10 CST 2015
     */
    public SCodeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_CODE
     *
     * @mbggenerated Wed Mar 18 14:25:10 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_CODE
     *
     * @mbggenerated Wed Mar 18 14:25:10 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_CODE
     *
     * @mbggenerated Wed Mar 18 14:25:10 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_CODE
     *
     * @mbggenerated Wed Mar 18 14:25:10 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_CODE
     *
     * @mbggenerated Wed Mar 18 14:25:10 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_CODE
     *
     * @mbggenerated Wed Mar 18 14:25:10 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_CODE
     *
     * @mbggenerated Wed Mar 18 14:25:10 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_CODE
     *
     * @mbggenerated Wed Mar 18 14:25:10 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_CODE
     *
     * @mbggenerated Wed Mar 18 14:25:10 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_CODE
     *
     * @mbggenerated Wed Mar 18 14:25:10 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table S_CODE
     *
     * @mbggenerated Wed Mar 18 14:25:10 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCodeidIsNull() {
            addCriterion("CODEID is null");
            return (Criteria) this;
        }

        public Criteria andCodeidIsNotNull() {
            addCriterion("CODEID is not null");
            return (Criteria) this;
        }

        public Criteria andCodeidEqualTo(BigDecimal value) {
            addCriterion("CODEID =", value, "codeid");
            return (Criteria) this;
        }

        public Criteria andCodeidNotEqualTo(BigDecimal value) {
            addCriterion("CODEID <>", value, "codeid");
            return (Criteria) this;
        }

        public Criteria andCodeidGreaterThan(BigDecimal value) {
            addCriterion("CODEID >", value, "codeid");
            return (Criteria) this;
        }

        public Criteria andCodeidGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("CODEID >=", value, "codeid");
            return (Criteria) this;
        }

        public Criteria andCodeidLessThan(BigDecimal value) {
            addCriterion("CODEID <", value, "codeid");
            return (Criteria) this;
        }

        public Criteria andCodeidLessThanOrEqualTo(BigDecimal value) {
            addCriterion("CODEID <=", value, "codeid");
            return (Criteria) this;
        }

        public Criteria andCodeidIn(List<BigDecimal> values) {
            addCriterion("CODEID in", values, "codeid");
            return (Criteria) this;
        }

        public Criteria andCodeidNotIn(List<BigDecimal> values) {
            addCriterion("CODEID not in", values, "codeid");
            return (Criteria) this;
        }

        public Criteria andCodeidBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CODEID between", value1, value2, "codeid");
            return (Criteria) this;
        }

        public Criteria andCodeidNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CODEID not between", value1, value2, "codeid");
            return (Criteria) this;
        }

        public Criteria andCodenoIsNull() {
            addCriterion("CODENO is null");
            return (Criteria) this;
        }

        public Criteria andCodenoIsNotNull() {
            addCriterion("CODENO is not null");
            return (Criteria) this;
        }

        public Criteria andCodenoEqualTo(String value) {
            addCriterion("CODENO =", value, "codeno");
            return (Criteria) this;
        }

        public Criteria andCodenoNotEqualTo(String value) {
            addCriterion("CODENO <>", value, "codeno");
            return (Criteria) this;
        }

        public Criteria andCodenoGreaterThan(String value) {
            addCriterion("CODENO >", value, "codeno");
            return (Criteria) this;
        }

        public Criteria andCodenoGreaterThanOrEqualTo(String value) {
            addCriterion("CODENO >=", value, "codeno");
            return (Criteria) this;
        }

        public Criteria andCodenoLessThan(String value) {
            addCriterion("CODENO <", value, "codeno");
            return (Criteria) this;
        }

        public Criteria andCodenoLessThanOrEqualTo(String value) {
            addCriterion("CODENO <=", value, "codeno");
            return (Criteria) this;
        }

        public Criteria andCodenoLike(String value) {
            addCriterion("CODENO like", value, "codeno");
            return (Criteria) this;
        }

        public Criteria andCodenoNotLike(String value) {
            addCriterion("CODENO not like", value, "codeno");
            return (Criteria) this;
        }

        public Criteria andCodenoIn(List<String> values) {
            addCriterion("CODENO in", values, "codeno");
            return (Criteria) this;
        }

        public Criteria andCodenoNotIn(List<String> values) {
            addCriterion("CODENO not in", values, "codeno");
            return (Criteria) this;
        }

        public Criteria andCodenoBetween(String value1, String value2) {
            addCriterion("CODENO between", value1, value2, "codeno");
            return (Criteria) this;
        }

        public Criteria andCodenoNotBetween(String value1, String value2) {
            addCriterion("CODENO not between", value1, value2, "codeno");
            return (Criteria) this;
        }

        public Criteria andCodenameIsNull() {
            addCriterion("CODENAME is null");
            return (Criteria) this;
        }

        public Criteria andCodenameIsNotNull() {
            addCriterion("CODENAME is not null");
            return (Criteria) this;
        }

        public Criteria andCodenameEqualTo(String value) {
            addCriterion("CODENAME =", value, "codename");
            return (Criteria) this;
        }

        public Criteria andCodenameNotEqualTo(String value) {
            addCriterion("CODENAME <>", value, "codename");
            return (Criteria) this;
        }

        public Criteria andCodenameGreaterThan(String value) {
            addCriterion("CODENAME >", value, "codename");
            return (Criteria) this;
        }

        public Criteria andCodenameGreaterThanOrEqualTo(String value) {
            addCriterion("CODENAME >=", value, "codename");
            return (Criteria) this;
        }

        public Criteria andCodenameLessThan(String value) {
            addCriterion("CODENAME <", value, "codename");
            return (Criteria) this;
        }

        public Criteria andCodenameLessThanOrEqualTo(String value) {
            addCriterion("CODENAME <=", value, "codename");
            return (Criteria) this;
        }

        public Criteria andCodenameLike(String value) {
            addCriterion("CODENAME like", value, "codename");
            return (Criteria) this;
        }

        public Criteria andCodenameNotLike(String value) {
            addCriterion("CODENAME not like", value, "codename");
            return (Criteria) this;
        }

        public Criteria andCodenameIn(List<String> values) {
            addCriterion("CODENAME in", values, "codename");
            return (Criteria) this;
        }

        public Criteria andCodenameNotIn(List<String> values) {
            addCriterion("CODENAME not in", values, "codename");
            return (Criteria) this;
        }

        public Criteria andCodenameBetween(String value1, String value2) {
            addCriterion("CODENAME between", value1, value2, "codename");
            return (Criteria) this;
        }

        public Criteria andCodenameNotBetween(String value1, String value2) {
            addCriterion("CODENAME not between", value1, value2, "codename");
            return (Criteria) this;
        }

        public Criteria andSortnoIsNull() {
            addCriterion("SORTNO is null");
            return (Criteria) this;
        }

        public Criteria andSortnoIsNotNull() {
            addCriterion("SORTNO is not null");
            return (Criteria) this;
        }

        public Criteria andSortnoEqualTo(BigDecimal value) {
            addCriterion("SORTNO =", value, "sortno");
            return (Criteria) this;
        }

        public Criteria andSortnoNotEqualTo(BigDecimal value) {
            addCriterion("SORTNO <>", value, "sortno");
            return (Criteria) this;
        }

        public Criteria andSortnoGreaterThan(BigDecimal value) {
            addCriterion("SORTNO >", value, "sortno");
            return (Criteria) this;
        }

        public Criteria andSortnoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SORTNO >=", value, "sortno");
            return (Criteria) this;
        }

        public Criteria andSortnoLessThan(BigDecimal value) {
            addCriterion("SORTNO <", value, "sortno");
            return (Criteria) this;
        }

        public Criteria andSortnoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SORTNO <=", value, "sortno");
            return (Criteria) this;
        }

        public Criteria andSortnoIn(List<BigDecimal> values) {
            addCriterion("SORTNO in", values, "sortno");
            return (Criteria) this;
        }

        public Criteria andSortnoNotIn(List<BigDecimal> values) {
            addCriterion("SORTNO not in", values, "sortno");
            return (Criteria) this;
        }

        public Criteria andSortnoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SORTNO between", value1, value2, "sortno");
            return (Criteria) this;
        }

        public Criteria andSortnoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SORTNO not between", value1, value2, "sortno");
            return (Criteria) this;
        }

        public Criteria andParentcodenoIsNull() {
            addCriterion("PARENTCODENO is null");
            return (Criteria) this;
        }

        public Criteria andParentcodenoIsNotNull() {
            addCriterion("PARENTCODENO is not null");
            return (Criteria) this;
        }

        public Criteria andParentcodenoEqualTo(String value) {
            addCriterion("PARENTCODENO =", value, "parentcodeno");
            return (Criteria) this;
        }

        public Criteria andParentcodenoNotEqualTo(String value) {
            addCriterion("PARENTCODENO <>", value, "parentcodeno");
            return (Criteria) this;
        }

        public Criteria andParentcodenoGreaterThan(String value) {
            addCriterion("PARENTCODENO >", value, "parentcodeno");
            return (Criteria) this;
        }

        public Criteria andParentcodenoGreaterThanOrEqualTo(String value) {
            addCriterion("PARENTCODENO >=", value, "parentcodeno");
            return (Criteria) this;
        }

        public Criteria andParentcodenoLessThan(String value) {
            addCriterion("PARENTCODENO <", value, "parentcodeno");
            return (Criteria) this;
        }

        public Criteria andParentcodenoLessThanOrEqualTo(String value) {
            addCriterion("PARENTCODENO <=", value, "parentcodeno");
            return (Criteria) this;
        }

        public Criteria andParentcodenoLike(String value) {
            addCriterion("PARENTCODENO like", value, "parentcodeno");
            return (Criteria) this;
        }

        public Criteria andParentcodenoNotLike(String value) {
            addCriterion("PARENTCODENO not like", value, "parentcodeno");
            return (Criteria) this;
        }

        public Criteria andParentcodenoIn(List<String> values) {
            addCriterion("PARENTCODENO in", values, "parentcodeno");
            return (Criteria) this;
        }

        public Criteria andParentcodenoNotIn(List<String> values) {
            addCriterion("PARENTCODENO not in", values, "parentcodeno");
            return (Criteria) this;
        }

        public Criteria andParentcodenoBetween(String value1, String value2) {
            addCriterion("PARENTCODENO between", value1, value2, "parentcodeno");
            return (Criteria) this;
        }

        public Criteria andParentcodenoNotBetween(String value1, String value2) {
            addCriterion("PARENTCODENO not between", value1, value2, "parentcodeno");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table S_CODE
     *
     * @mbggenerated do_not_delete_during_merge Wed Mar 18 14:25:10 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table S_CODE
     *
     * @mbggenerated Wed Mar 18 14:25:10 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}